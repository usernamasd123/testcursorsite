generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id          String   @id @default(cuid())
  content     String
  role        String
  userId      String?
  cardId      String?
  hour        Int      @default(0)
  isError     Boolean  @default(false)
  isLead      Boolean  @default(false)
  leadType    String?
  rating      String?
  sessionId   String
  session     UserSession @relation(fields: [sessionId], references: [id])
  reactions   MessageReaction[]
  timestamp   DateTime @default(now())

  @@index([userId])
  @@index([cardId])
  @@index([hour])
}

model MessageReaction {
  id          String   @id @default(cuid())
  messageId   String
  message     Message  @relation(fields: [messageId], references: [id])
  sessionId   String
  session     UserSession @relation(fields: [sessionId], references: [id])
  type        String   // 'like', 'dislike'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([messageId, sessionId])
}

model Card {
  id          String   @id
  title       String
  description String
  type        String
  clicks      Int      @default(0)
  features    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserSession {
  id              String   @id @default(cuid())
  userId          String   @unique
  messageCount    Int      @default(0)
  isReturning     Boolean  @default(false)
  lastMessageTime DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  messageTimes    DateTime[]
  messages        Message[]
  reactions       MessageReaction[]
}

model Dialogue {
  id        String   @id @default(cuid())
  cardId    String
  startTime DateTime @default(now())
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cardId])
}
